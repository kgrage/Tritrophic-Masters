facet_grid(Site ~ Combo, labeller = labeller(
Site = c(SB = "Santa Barbara", HB = "Hubbard Brook", KP = "Konza Prairie"), # Example renaming for SITE
Combo = c(PS = "Primary & Secondary", TP = "Primary & Tertiary", ST = "Secondary and Tertiary") # Example renaming for COMBO
)) # Facet by SITE across and COMBO down with custom labels
All
All <- df %>%
pivot_longer(cols = c(R_squared, RMSE), names_to = "Metric", values_to = "Value") %>%
ggplot(aes(x=Year, y=Value, color = Metric))+
geom_point()+
facet_grid(Site ~ Combo, labeller = labeller(
Site = c(SB = "Santa Barbara", HB = "Hubbard Brook", KP = "Konza Prairie"), # Example renaming for SITE
Combo = c(PS = "Primary & Secondary", TP = "Primary & Tertiary", ST = "Secondary and Tertiary") # Example renaming for COMBO
)) # Facet by SITE across and COMBO down with custom labels
All
## figure code #018
hubbard_data <- read.csv("model_output/model_hubbard_brook.csv")
hub_6 <- hubbard_data %>%
filter(N_years == "6" & start_year>=1992 & start_year<=2011)
library(tidyverse)
library(ggplot2)
## figure code #018
hubbard_data <- read.csv("model_output/model_hubbard_brook.csv")
hub_6 <- hubbard_data %>%
filter(N_years == "6" & start_year>=1992 & start_year<=2011)
# need to manually check the start and end dates in common so arrays match up
hub_prim_6 <- hub_6[hub_6$trophic_level == 'Primary',] %>%
group_by(start_year) %>%
summarise(avg_slope = mean(slope))
hub_secon_6 <- hub_6[hub_6$trophic_level == 'Secondary',]%>%
group_by(start_year) %>%
summarise(avg_slope = mean(slope))
hub_tert_6 <- hub_6[hub_6$trophic_level == 'Tertiary',]%>%
group_by(start_year) %>%
summarise(avg_slope = mean(slope))
## cross correlation plot in ggplot between prim and sec
ps_hb_6 <- ggCcf(hub_prim_6$avg_slope, hub_secon_6$avg_slope, lag.max = NULL,
type = c("correlation", "covariance"), plot = TRUE, na.action = na.contiguous) +
labs(title="Primary and secondary", fontsize = 10, x ="", y = "Correlation")+
ylim (-.75,.75)+
xlim(-10,10)+
theme(plot.title=element_text(size=10), axis.title.y=element_text(size=8), axis.title.x=element_blank())
## between sec and tert
st_hb_6 <- ggCcf(hub_secon_6$avg_slope, hub_tert_6$avg_slope, lag.max = NULL,
type = c("correlation", "covariance"), plot = TRUE, na.action = na.contiguous) +
labs(title="Secondary and tertiary  ", x ="", y = " ")+
ylim (-.75,.75)+
xlim(-10,10)+
theme(plot.title=element_text(size=10), axis.title=element_blank())
## between prim and tert
pt_hb_6 <- ggCcf(hub_prim_6$avg_slope, hub_tert_6$avg_slope, lag.max = NULL,
type = c("correlation", "covariance"), plot = TRUE, na.action = na.contiguous) +
labs(title="Primary and tertiary  ", x ="", y = " ") +
ylim (-.75,.75)+
xlim(-10,10)+
theme(plot.title=element_text(size=10), axis.title=element_blank())
library(nls2)
library(forecast)
## cross correlation plot in ggplot between prim and sec
ps_hb_6 <- ggCcf(hub_prim_6$avg_slope, hub_secon_6$avg_slope, lag.max = NULL,
type = c("correlation", "covariance"), plot = TRUE, na.action = na.contiguous) +
labs(title="Primary and secondary", fontsize = 10, x ="", y = "Correlation")+
ylim (-.75,.75)+
xlim(-10,10)+
theme(plot.title=element_text(size=10), axis.title.y=element_text(size=8), axis.title.x=element_blank())
## between sec and tert
st_hb_6 <- ggCcf(hub_secon_6$avg_slope, hub_tert_6$avg_slope, lag.max = NULL,
type = c("correlation", "covariance"), plot = TRUE, na.action = na.contiguous) +
labs(title="Secondary and tertiary  ", x ="", y = " ")+
ylim (-.75,.75)+
xlim(-10,10)+
theme(plot.title=element_text(size=10), axis.title=element_blank())
## between prim and tert
pt_hb_6 <- ggCcf(hub_prim_6$avg_slope, hub_tert_6$avg_slope, lag.max = NULL,
type = c("correlation", "covariance"), plot = TRUE, na.action = na.contiguous) +
labs(title="Primary and tertiary  ", x ="", y = " ") +
ylim (-.75,.75)+
xlim(-10,10)+
theme(plot.title=element_text(size=10), axis.title=element_blank())
grid.arrange(ps_hb_6, st_hb_6, pt_hb_6, ncol=3,
top="Cross correlations of population trajectories between trophic levels at Hubbard Brook (6)")
hubb_5_cross <-grid.arrange(ps_hb_5, st_hb_5, pt_hb_5, ncol=3,
top="Hubbard Brook")
library(gridExtra)
## between prim and tert
pt_hb_6 <- ggCcf(hub_prim_6$avg_slope, hub_tert_6$avg_slope, lag.max = NULL,
type = c("correlation", "covariance"), plot = TRUE, na.action = na.contiguous) +
labs(title="Primary and tertiary  ", x ="", y = " ") +
ylim (-.75,.75)+
xlim(-10,10)+
theme(plot.title=element_text(size=10), axis.title=element_blank())
grid.arrange(ps_hb_6, st_hb_6, pt_hb_6, ncol=3,
top="Cross correlations of population trajectories between trophic levels at Hubbard Brook (6)")
## figure code #018
hubbard_data <- read.csv("model_output/model_hubbard_brook.csv")
hub_6 <- hubbard_data %>%
filter(N_years == "6" & start_year>=1992 & start_year<=2011)
# need to manually check the start and end dates in common so arrays match up
hub_prim_6 <- hub_6[hub_6$trophic_level == 'Primary',] %>%
group_by(start_year) %>%
summarise(avg_slope = mean(slope))
hub_secon_6 <- hub_6[hub_6$trophic_level == 'Secondary',]%>%
group_by(start_year) %>%
summarise(avg_slope = mean(slope))
hub_tert_6 <- hub_6[hub_6$trophic_level == 'Tertiary',]%>%
group_by(start_year) %>%
summarise(avg_slope = mean(slope))
## cross correlation plot in ggplot between prim and sec
ps_hb_6 <- ggCcf(hub_prim_6$avg_slope, hub_secon_6$avg_slope, lag.max = NULL,
type = c("correlation", "covariance"), plot = TRUE, na.action = na.contiguous) +
labs(title="Primary and secondary", fontsize = 10, x ="", y = "Correlation")+
ylim (-.75,.75)+
xlim(-10,10)+
theme(plot.title=element_text(size=10), axis.title.y=element_text(size=8), axis.title.x=element_blank())
## between sec and tert
st_hb_6 <- ggCcf(hub_secon_6$avg_slope, hub_tert_6$avg_slope, lag.max = NULL,
type = c("correlation", "covariance"), plot = TRUE, na.action = na.contiguous) +
labs(title="Secondary and tertiary  ", x ="", y = " ")+
ylim (-.75,.75)+
xlim(-10,10)+
theme(plot.title=element_text(size=10), axis.title=element_blank())
## between prim and tert
pt_hb_6 <- ggCcf(hub_prim_6$avg_slope, hub_tert_6$avg_slope, lag.max = NULL,
type = c("correlation", "covariance"), plot = TRUE, na.action = na.contiguous) +
labs(title="Primary and tertiary  ", x ="", y = " ") +
ylim (-.75,.75)+
xlim(-10,10)+
theme(plot.title=element_text(size=10), axis.title=element_blank())
grid.arrange(ps_hb_6, st_hb_6, pt_hb_6, ncol=3,
top="Cross correlations of population trajectories between trophic levels at Hubbard Brook (6)")
hubb_6_cross <-grid.arrange(ps_hb_6, st_hb_6, pt_hb_6, ncol=3,
top="Hubbard Brook")
konzakat_data <- read.csv("model_output/model_konzakat.csv")
konzkat_6 <- konzakat_data %>%
filter(N_years == "6" & start_year>=1992 & start_year<=2011)
# need to manually check the start and end dates in common so arrays match up
konzkat_prim_6 <- konzkat_6[konzkat_6$trophic_level == 'Primary',] %>%
group_by(start_year) %>%
summarise(avg_slope = mean(slope))
konzkat_secon_6 <- konzkat_6[konzkat_6$trophic_level == 'Secondary',]%>%
group_by(start_year) %>%
summarise(avg_slope = mean(slope))
konzkat_tert_6 <- konzkat_6[konzkat_6$trophic_level == 'Tertiary',]%>%
group_by(start_year) %>%
summarise(avg_slope = mean(slope))
## cross correlation plot in ggplot between prim and sec
ps_kzkat_6 <- ggCcf(konzkat_prim_6$avg_slope, konzkat_secon_6$avg_slope, lag.max = NULL,
type = c("correlation", "covariance"), plot = TRUE, na.action = na.contiguous) +
labs(title = " ", x= " ", y = "Correlation")+
ylim (-.75,.75)+
xlim(-10,10)+
theme(plot.title=element_blank(), axis.title.y=element_text(size=8), axis.title.x=element_blank())
## between sec and tert
st_kzkat_6 <- ggCcf(konzkat_secon_6$avg_slope, konzkat_tert_6$avg_slope, lag.max = NULL,
type = c("correlation", "covariance"), plot = TRUE, na.action = na.contiguous) +
labs(title = " ", x =" ", y = " ")+
ylim (-.75,.75)+
xlim(-10,10)+
theme(plot.title=element_blank(), axis.title=element_blank())
## between prim and tert
pt_kzkat_6 <- ggCcf(konzkat_prim_6$avg_slope, konzkat_tert_6$avg_slope, lag.max = NULL,
type = c("correlation", "covariance"), plot = TRUE, na.action = na.contiguous) +
labs(title = " ", x =" ", y = " ")+
ylim (-.75,.75)+
xlim(-10,10)+
theme(plot.title=element_blank(), axis.title=element_blank())
grid.arrange(ps_kzkat_6, st_kzkat_6, pt_kzkat_6, ncol=3,
top="Cross correlations of population trajectories between trophic levels at Konza Prairie (6)")
konzkat_6_cross <-grid.arrange(ps_kzkat_6, st_kzkat_6, pt_kzkat_6, ncol=3,
top="Konza Prairie")
santa_data <- read.csv("model_output/model_santa_barbara_coastal.csv")
sant_6 <- santa_data %>%
filter(N_years == "6" & start_year>=1992 & start_year<=2011)
# need to manually check the start and end dates in common so arrays match up
sant_prim_6 <- sant_6[sant_6$trophic_level == 'Primary',] %>%
group_by(start_year) %>%
summarise(avg_slope = mean(slope))
sant_secon_6 <- sant_6[sant_6$trophic_level == 'Secondary',]%>%
group_by(start_year) %>%
summarise(avg_slope = mean(slope))
sant_tert_6 <- sant_6[sant_6$trophic_level == 'Tertiary',]%>%
group_by(start_year) %>%
summarise(avg_slope = mean(slope))
## cross correlation plot in ggplot between prim and sec
ps_sb_6 <- ggCcf(sant_prim_6$avg_slope, sant_secon_6$avg_slope, lag.max = NULL,
type = c("correlation", "covariance"), plot = TRUE, na.action = na.contiguous) +
labs(title="Primary and secondary", x ="", y = "Correlation")+
ggtitle("Primary and secondary")+
ylim (-.75,.75)+
xlim(-8,8)+
theme(plot.title=element_blank(), axis.title.y=element_text(size=8), axis.title.x = element_text(size=8))
## between sec and tert
st_sb_6 <- ggCcf(sant_secon_6$avg_slope, sant_tert_6$avg_slope, lag.max = NULL,
type = c("correlation", "covariance"), plot = TRUE, na.action = na.contiguous) +
ylim (-.75,.75)+
xlim(-8,8)+
labs(title="Secondary and tertiary", x ="Years (Lag)", y = " ")+
ggtitle("Secondary and tertiary")+
theme(plot.title=element_blank(), axis.title.x=element_text(size=8), axis.title.y=element_blank())
## between prim and tert
pt_sb_6 <- ggCcf(sant_prim_6$avg_slope, sant_tert_6$avg_slope, lag.max = NULL,
type = c("correlation", "covariance"), plot = TRUE, na.action = na.contiguous) +
labs(title="Primary and tertiary", x ="", y = " ")+
ggtitle("Primary and tertiary")+
ylim (-.75,.75)+
xlim(-8,8)+
theme(plot.title=element_blank(), axis.title.x=element_text(size=8), axis.title.y=element_blank())
grid.arrange(ps_sb_6, st_sb_6, pt_sb_6, ncol=3,
top="Cross correlations of population trajectories between trophic levels at Santa Barbara Coastal (5)")
sant_6_cross <-grid.arrange(ps_sb_6, st_sb_6, pt_sb_6, ncol=3,
top="Santa Barbara Coastal")
sant_6_cross_sing <-grid.arrange(ps_sb_6, st_sb_6, pt_sb_6, ncol=3)
## figure code: 018 ###
grid.arrange(hubb_6_cross, konzkat_6_cross, sant_6_cross,  nrow=3, top="Six Year Window")
3
## figure code #019
hubbard_data <- read.csv("model_output/model_hubbard_brook.csv")
hub_4 <- hubbard_data %>%
filter(N_years == "4" & start_year>=1992 & start_year<=2011)
# need to manually check the start and end dates in common so arrays match up
hub_prim_4 <- hub_4[hub_4$trophic_level == 'Primary',] %>%
group_by(start_year) %>%
summarise(avg_slope = mean(slope))
hub_secon_4 <- hub_4[hub_4$trophic_level == 'Secondary',]%>%
group_by(start_year) %>%
summarise(avg_slope = mean(slope))
hub_tert_4 <- hub_4[hub_4$trophic_level == 'Tertiary',]%>%
group_by(start_year) %>%
summarise(avg_slope = mean(slope))
## cross correlation plot in ggplot between prim and sec
ps_hb_4 <- ggCcf(hub_prim_4$avg_slope, hub_secon_4$avg_slope, lag.max = NULL,
type = c("correlation", "covariance"), plot = TRUE, na.action = na.contiguous) +
labs(title="Primary and secondary", fontsize = 10, x ="", y = "Correlation")+
ylim (-.75,.75)+
xlim(-10,10)+
theme(plot.title=element_text(size=10), axis.title.y=element_text(size=8), axis.title.x=element_blank())
## between sec and tert
st_hb_4 <- ggCcf(hub_secon_4$avg_slope, hub_tert_4$avg_slope, lag.max = NULL,
type = c("correlation", "covariance"), plot = TRUE, na.action = na.contiguous) +
labs(title="Secondary and tertiary  ", x ="", y = " ")+
ylim (-.75,.75)+
xlim(-10,10)+
theme(plot.title=element_text(size=10), axis.title=element_blank())
## between prim and tert
pt_hb_4 <- ggCcf(hub_prim_4$avg_slope, hub_tert_4$avg_slope, lag.max = NULL,
type = c("correlation", "covariance"), plot = TRUE, na.action = na.contiguous) +
labs(title="Primary and tertiary  ", x ="", y = " ") +
ylim (-.75,.75)+
xlim(-10,10)+
theme(plot.title=element_text(size=10), axis.title=element_blank())
grid.arrange(ps_hb_4, st_hb_4, pt_hb_4, ncol=3,
top="Cross correlations of population trajectories between trophic levels at Hubbard Brook (3)")
hubb_4_cross <-grid.arrange(ps_hb_4, st_hb_4, pt_hb_4, ncol=3,
top="Hubbard Brook")
konzakat_data <- read.csv("model_output/model_konzakat.csv")
konzkat_4 <- konzakat_data %>%
filter(N_years == "4" & start_year>=1992 & start_year<=2011)
# need to manually check the start and end dates in common so arrays match up
konzkat_prim_4 <- konzkat_4[konzkat_4$trophic_level == 'Primary',] %>%
group_by(start_year) %>%
summarise(avg_slope = mean(slope))
konzkat_secon_4 <- konzkat_4[konzkat_4$trophic_level == 'Secondary',]%>%
group_by(start_year) %>%
summarise(avg_slope = mean(slope))
konzkat_tert_4 <- konzkat_4[konzkat_4$trophic_level == 'Tertiary',]%>%
group_by(start_year) %>%
summarise(avg_slope = mean(slope))
## cross correlation plot in ggplot between prim and sec
ps_kzkat_4 <- ggCcf(konzkat_prim_4$avg_slope, konzkat_secon_4$avg_slope, lag.max = NULL,
type = c("correlation", "covariance"), plot = TRUE, na.action = na.contiguous) +
labs(title = " ", x= " ", y = "Correlation")+
ylim (-.75,.75)+
xlim(-10,10)+
theme(plot.title=element_blank(), axis.title.y=element_text(size=8), axis.title.x=element_blank())
## between sec and tert
st_kzkat_4 <- ggCcf(konzkat_secon_4$avg_slope, konzkat_tert_4$avg_slope, lag.max = NULL,
type = c("correlation", "covariance"), plot = TRUE, na.action = na.contiguous) +
labs(title = " ", x =" ", y = " ")+
ylim (-.75,.75)+
xlim(-10,10)+
theme(plot.title=element_blank(), axis.title=element_blank())
## between prim and tert
pt_kzkat_4 <- ggCcf(konzkat_prim_4$avg_slope, konzkat_tert_4$avg_slope, lag.max = NULL,
type = c("correlation", "covariance"), plot = TRUE, na.action = na.contiguous) +
labs(title = " ", x =" ", y = " ")+
ylim (-.75,.75)+
xlim(-10,10)+
theme(plot.title=element_blank(), axis.title=element_blank())
grid.arrange(ps_kzkat_4, st_kzkat_4, pt_kzkat_4, ncol=3,
top="Cross correlations of population trajectories between trophic levels at Konza Prairie (3)")
konzkat_4_cross <-grid.arrange(ps_kzkat_4, st_kzkat_4, pt_kzkat_4, ncol=3,
top="Konza Prairie")
santa_data <- read.csv("model_output/model_santa_barbara_coastal.csv")
sant_4 <- santa_data %>%
filter(N_years == "4" & start_year>=1992 & start_year<=2011)
# need to manually check the start and end dates in common so arrays match up
sant_prim_4 <- sant_4[sant_4$trophic_level == 'Primary',] %>%
group_by(start_year) %>%
summarise(avg_slope = mean(slope))
sant_secon_4 <- sant_4[sant_4$trophic_level == 'Secondary',]%>%
group_by(start_year) %>%
summarise(avg_slope = mean(slope))
sant_tert_4 <- sant_4[sant_4$trophic_level == 'Tertiary',]%>%
group_by(start_year) %>%
summarise(avg_slope = mean(slope))
## cross correlation plot in ggplot between prim and sec
ps_sb_4 <- ggCcf(sant_prim_4$avg_slope, sant_secon_4$avg_slope, lag.max = NULL,
type = c("correlation", "covariance"), plot = TRUE, na.action = na.contiguous) +
labs(title="Primary and secondary", x ="", y = "Correlation")+
ggtitle("Primary and secondary")+
ylim (-.75,.75)+
xlim(-8,8)+
theme(plot.title=element_blank(), axis.title.y=element_text(size=8), axis.title.x = element_text(size=8))
## between sec and tert
st_sb_4 <- ggCcf(sant_secon_4$avg_slope, sant_tert_4$avg_slope, lag.max = NULL,
type = c("correlation", "covariance"), plot = TRUE, na.action = na.contiguous) +
ylim (-.75,.75)+
xlim(-8,8)+
labs(title="Secondary and tertiary", x ="Years (Lag)", y = " ")+
ggtitle("Secondary and tertiary")+
theme(plot.title=element_blank(), axis.title.x=element_text(size=8), axis.title.y=element_blank())
## between prim and tert
pt_sb_4 <- ggCcf(sant_prim_4$avg_slope, sant_tert_4$avg_slope, lag.max = NULL,
type = c("correlation", "covariance"), plot = TRUE, na.action = na.contiguous) +
labs(title="Primary and tertiary", x ="", y = " ")+
ggtitle("Primary and tertiary")+
ylim (-.75,.75)+
xlim(-8,8)+
theme(plot.title=element_blank(), axis.title.x=element_text(size=8), axis.title.y=element_blank())
grid.arrange(ps_sb_4, st_sb_4, pt_sb_4, ncol=3,
top="Cross correlations of population trajectories between trophic levels at Santa Barbara Coastal (3)")
sant_4_cross <-grid.arrange(ps_sb_4, st_sb_4, pt_sb_4, ncol=3,
top="Santa Barbara Coastal")
sant_4_cross_sing <-grid.arrange(ps_sb_4, st_sb_4, pt_sb_4, ncol=3)
## figure code: 019 ###
grid.arrange(hubb_4_cross, konzkat_4_cross, sant_4_cross,  nrow=3, top="Three Year Window")
## figure code: 019 ###
grid.arrange(hubb_4_cross, konzkat_4_cross, sant_4_cross,  nrow=3, top="Four Year Window")
## figure code: 000 ###
grid.arrange(hubb_8_cross, konzkat_8_cross, sant_8_cross,  nrow=3, top="Eight Year Window")
library
library
library(forecast)
library(gridExtra)
library(ggplot2)
library(grid)
All <- df %>%
pivot_longer(cols = c(R_squared, RMSE), names_to = "Metric", values_to = "Value") %>%
ggplot(aes(x=Year, y=Value, color = Metric))+
geom_point()+
geom_smooth(method = "lm", se = FALSE) + # Add this line for the trend lines
stat_regline_equation(aes(label = ..eq.label..), label.x = "left") +
facet_grid(Site ~ Combo, labeller = labeller(
Site = c(SB = "Santa Barbara", HB = "Hubbard Brook", KP = "Konza Prairie"), # Example renaming for SITE
Combo = c(PS = "Primary & Secondary", TP = "Primary & Tertiary", ST = "Secondary and Tertiary") # Example renaming for COMBO
)) # Facet by SITE across and COMBO down with custom labels
library(ggplot2)
library(ggpmisc)
install.packages("ggpmisc")
library(ggpmisc)
All <- df %>%
pivot_longer(cols = c(R_squared, RMSE), names_to = "Metric", values_to = "Value") %>%
ggplot(aes(x=Year, y=Value, color = Metric))+
geom_point()+
geom_smooth(method = "lm", se = FALSE) + # Add this line for the trend lines
stat_regline_equation(aes(label = ..eq.label..), label.x = "left") +
facet_grid(Site ~ Combo, labeller = labeller(
Site = c(SB = "Santa Barbara", HB = "Hubbard Brook", KP = "Konza Prairie"), # Example renaming for SITE
Combo = c(PS = "Primary & Secondary", TP = "Primary & Tertiary", ST = "Secondary and Tertiary") # Example renaming for COMBO
)) # Facet by SITE across and COMBO down with custom labels
library(dplyr)
All <- df %>%
pivot_longer(cols = c(R_squared, RMSE), names_to = "Metric", values_to = "Value") %>%
ggplot(aes(x=Year, y=Value, color = Metric))+
geom_point()+
geom_smooth(method = "lm", se = FALSE) + # Add this line for the trend lines
stat_regline_equation(aes(label = ..eq.label..), label.x = "left") +
facet_grid(Site ~ Combo, labeller = labeller(
Site = c(SB = "Santa Barbara", HB = "Hubbard Brook", KP = "Konza Prairie"), # Example renaming for SITE
Combo = c(PS = "Primary & Secondary", TP = "Primary & Tertiary", ST = "Secondary and Tertiary") # Example renaming for COMBO
)) # Facet by SITE across and COMBO down with custom labels
library(tidyr)
All <- df %>%
pivot_longer(cols = c(R_squared, RMSE), names_to = "Metric", values_to = "Value") %>%
ggplot(aes(x=Year, y=Value, color = Metric))+
geom_point()+
geom_smooth(method = "lm", se = FALSE) + # Add this line for the trend lines
stat_regline_equation(aes(label = ..eq.label..), label.x = "left") +
facet_grid(Site ~ Combo, labeller = labeller(
Site = c(SB = "Santa Barbara", HB = "Hubbard Brook", KP = "Konza Prairie"), # Example renaming for SITE
Combo = c(PS = "Primary & Secondary", TP = "Primary & Tertiary", ST = "Secondary and Tertiary") # Example renaming for COMBO
)) # Facet by SITE across and COMBO down with custom labels
All <- df %>%
pivot_longer(cols = c(R_squared, RMSE), names_to = "Metric", values_to = "Value") %>%
ggplot(aes(x=Year, y=Value, color = Metric))+
geom_point()+
geom_smooth(method = "lm", se = FALSE) + # Add this line for the trend lines
stat_regline_equation(aes(), label.x = "left") +
facet_grid(Site ~ Combo, labeller = labeller(
Site = c(SB = "Santa Barbara", HB = "Hubbard Brook", KP = "Konza Prairie"), # Example renaming for SITE
Combo = c(PS = "Primary & Secondary", TP = "Primary & Tertiary", ST = "Secondary and Tertiary") # Example renaming for COMBO
)) # Facet by SITE across and COMBO down with custom labels
All <- df %>%
pivot_longer(cols = c(R_squared, RMSE), names_to = "Metric", values_to = "Value") %>%
ggplot(aes(x=Year, y=Value, color = Metric))+
geom_point()+
geom_smooth(method = "lm", se = FALSE) + # Add this line for the trend lines
facet_grid(Site ~ Combo, labeller = labeller(
Site = c(SB = "Santa Barbara", HB = "Hubbard Brook", KP = "Konza Prairie"), # Example renaming for SITE
Combo = c(PS = "Primary & Secondary", TP = "Primary & Tertiary", ST = "Secondary and Tertiary") # Example renaming for COMBO
)) # Facet by SITE across and COMBO down with custom labels
All
df
str(df)
df$Year <- as.numeric(df$Year)
All <- df %>%
pivot_longer(cols = c(R_squared, RMSE), names_to = "Metric", values_to = "Value") %>%
ggplot(aes(x=Year, y=Value, color = Metric))+
geom_point()+
geom_smooth(method = "lm", se = FALSE) + # Add this line for the trend lines
facet_grid(Site ~ Combo, labeller = labeller(
Site = c(SB = "Santa Barbara", HB = "Hubbard Brook", KP = "Konza Prairie"), # Example renaming for SITE
Combo = c(PS = "Primary & Secondary", TP = "Primary & Tertiary", ST = "Secondary and Tertiary") # Example renaming for COMBO
)) # Facet by SITE across and COMBO down with custom labels
All
models <- df %>%
group_by(Site, Combo, Metric) %>%
do(model = lm(Value ~ Year, data = .))
models <- df %>%
pivot_longer(cols = c(R_squared, RMSE), names_to = "Metric", values_to = "Value") %>%
group_by(Site, Combo, Metric) %>%
do(model = lm(Value ~ Year, data = .))
# Summarize the models and extract the R-squared values
model_summaries <- models %>%
summarise(r_squared = summary(model)$r.squared)
print(model_summaries)
# Summarize the models and extract the R-squared values
model_summaries <- models %>%
group_by(Site, Combo, Metric) %>%
do(model = lm(Value ~ Year, data = .)) %>%
summarise(r_squared = summary(model)$r.squared) %>%
ungroup() %>% # remove the grouping
arrange(Site, Combo, Metric) # Arrange the results for clarity
print(models)
models <- df %>%
pivot_longer(cols = c(R_squared, RMSE), names_to = "Metric", values_to = "Value") %>%
group_by(Site, Combo, Metric) %>%
do(model = lm(Value ~ Year, data = .))
print(models)
# Summarize the models and extract the R-squared values
model_summaries <- models %>%
group_by(Site, Combo, Metric) %>%
do(model = lm(Value ~ Year, data = .)) %>%
summarise(r_squared = summary(model)$r.squared) %>%
ungroup() %>% # remove the grouping
arrange(Site, Combo, Metric) # Arrange the results for clarity
# Summarize the models and extract the R-squared values
model_summaries <- df %>%
group_by(Site, Combo, Metric) %>%
do(model = lm(Value ~ Year, data = .)) %>%
summarise(r_squared = summary(model)$r.squared) %>%
ungroup() %>% # remove the grouping
arrange(Site, Combo, Metric) # Arrange the results for clarity
# Summarize the models and extract the R-squared values
model_summaries <- df %>%
pivot_longer(cols = c(R_squared, RMSE), names_to = "Metric", values_to = "Value") %>%
group_by(Site, Combo, Metric) %>%
do(model = lm(Value ~ Year, data = .)) %>%
summarise(r_squared = summary(model)$r.squared) %>%
ungroup() %>% # remove the grouping
arrange(Site, Combo, Metric) # Arrange the results for clarity
str(df)
library(purrr)
library(broom)
models <- df %>%
pivot_longer(cols = c(R_squared, RMSE), names_to = "Metric", values_to = "Value") %>%
group_by(Site, Combo, Metric) %>%
nest() %>%
mutate(model = map(data, ~ lm(Value ~ Year, data = .x)))
# Now to extract the R-squared values and tidy the models dataframe
model_summaries <- models %>%
mutate(glance = map(model, glance)) %>%
unnest(glance) %>%
select(Site, Combo, Metric, r.squared)
print(model_summaries)
library(gridExtra)
library(gt)
install.packages("gt")
library(gt)
gt_table <- gt(model_summaries)
# Print the gt table
print(gt_table)
gt_table <- gt(model_summaries) %>%
tab_header(
title = "Model Summaries",
subtitle = "R-squared values for various combinations of Site, Combo, and Metric"
) %>%
cols_label(
Site = "Site",
Combo = "Combination",
Metric = "Metric",
r.squared = "R-squared"
) %>%
cols_align(
align = "center",
columns = everything()
) %>%
tab_options(
heading.background.color = "#D3D3D3",
table.font.size = "small"
)
# Print the gt table
print(gt_table)
